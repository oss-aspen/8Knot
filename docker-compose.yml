services:

  reverse-proxy:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-server
    ports:
      - "8050:8051" # bound to host port, exposed app endpoint
    networks:
      - app-net

  app-server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    ports:
      - 8050
    depends_on:
      - callback-worker
      - query-worker
      - redis-cache
    env_file:
      - ./env.list
    restart: always
    networks:
      - app-net

  callback-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.worker
    depends_on:
      - redis-cache
    env_file:
      - ./env.list
    restart: always
    networks:
      - app-net

  query-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.worker
    command:
      [
        "celery",
        "-A",
        "app:celery_app",
        "worker",
        "--loglevel=WARNING",
        "-Q",
        "data"
      ]
    depends_on:
      - redis-cache
    env_file:
      - ./env.list
    restart: always
    networks:
      - app-net

  redis-cache:
    image: redis
    ports:
      - 6379
    restart: always
    networks:
      - app-net

  flower:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.flower
    depends_on:
      - callback-worker
      - query-worker
      - redis-cache
      - app-server
    env_file:
      - ./env.list
    ports:
      - 5555:5555
    networks:
      - app-net
    profiles:
      - monitoring # run w/ '--profile monitoring' flag to enable

networks:
  app-net:
    driver: bridge
